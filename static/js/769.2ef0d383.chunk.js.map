{"version":3,"file":"static/js/769.2ef0d383.chunk.js","mappings":"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","sources":["components/contacts/ContactAdd.jsx","components/contacts/ContactsFilter.jsx","components/contacts/ContactsList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts/contactsOperations';\nimport {\n\tselectContactsError,\n\tselectContactsList,\n} from 'redux/contacts/contactsSlice';\n\nexport default function ContactAdd() {\n\tconst dispatch = useDispatch();\n\tconst errorMessage = useSelector(selectContactsError);\n\tconst contactsList = useSelector(selectContactsList);\n\n\tconst handleAddUser = e => {\n\t\te.preventDefault();\n\t\tconst form = e.currentTarget;\n\t\tconst name = form.elements.userName.value.trim();\n\t\tconst number = form.elements.userPhone.value.trim();\n\n\t\tif (\n\t\t\tcontactsList.find(\n\t\t\t\tcontact => contact.name.toLowerCase() === name.toLowerCase()\n\t\t\t)\n\t\t) {\n\t\t\talert(\n\t\t\t\t`The contact named ${name} has already been entered into the address book before`\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(addContactThunk({ name, number }));\n\t\t\tform.reset();\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleAddUser}>\n\t\t\t<input\n\t\t\t\tname=\"userName\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Name\"\n\t\t\t\tminLength={2}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tname=\"userPhone\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Phone number\"\n\t\t\t\tminLength={5}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<button type=\"submit\">Add user</button>\n\n\t\t\t{errorMessage && <p>{errorMessage}</p>}\n\t\t</form>\n\t);\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n\tselectContactsFilter,\n\tselectContactsList,\n\tsetFilter,\n} from 'redux/contacts/contactsSlice';\n\nexport default function ContactsFilter() {\n\tconst dispatch = useDispatch();\n\tconst contactsList = useSelector(selectContactsList);\n\tconst filter = useSelector(selectContactsFilter);\n\n\tconst handleFilter = e => {\n\t\tdispatch(setFilter(e.target.value));\n\t};\n\n\treturn contactsList?.length === 0 ? (\n\t\t<p>Contacts list is empty</p>\n\t) : (\n\t\t<div>\n\t\t\t<p>Find contacts by name or phone number:</p>\n\t\t\t<input onChange={handleFilter} value={filter} type=\"text\" />\n\t\t</div>\n\t);\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contacts/contactsOperations';\nimport {\n\tselectContactsError,\n\tselectContactsFilter,\n\t// selectContactsIsLoading,\n\tselectContactsList,\n} from 'redux/contacts/contactsSlice';\n\nexport default function ContactsList() {\n\tconst dispatch = useDispatch();\n\tconst contactsList = useSelector(selectContactsList);\n\tconst filter = useSelector(selectContactsFilter);\n\t// const isLoading = useSelector(selectContactsIsLoading);\n\tconst error = useSelector(selectContactsError);\n\n\tif (error) return <p>{error.message}</p>;\n\n\tconst handleDelete = contactId => {\n\t\tdispatch(deleteContactThunk(contactId));\n\t};\n\n\treturn (\n\t\t<ul>\n\t\t\t{contactsList\n\t\t\t\t?.filter(\n\t\t\t\t\tcontact =>\n\t\t\t\t\t\tcontact.name.toLowerCase().includes(filter.trim()) ||\n\t\t\t\t\t\tcontact.number.includes(filter.trim())\n\t\t\t\t)\n\t\t\t\t.map(({ id, name, number }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p>{name}</p>\n\t\t\t\t\t\t\t\t<p>{number}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button onClick={() => handleDelete(id)} type=\"button\">\n\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t</ul>\n\t);\n}\n","import ContactAdd from 'components/contacts/ContactAdd';\nimport ContactsFilter from 'components/contacts/ContactsFilter';\nimport ContactsList from 'components/contacts/ContactsList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUserLoggedIn } from 'redux/auth/authSlice';\nimport { getContactsThunk } from 'redux/contacts/contactsOperations';\n// import {\n// \tselectContactsError,\n// \tselectContactsIsLoading,\n// \tselectContactsList,\n// } from 'redux/contacts/contactsSlice';\n\nconst ContactsPage = () => {\n\tconst isLoggedIn = useSelector(selectUserLoggedIn);\n\t// const contactsList = useSelector(selectContactsList);\n\t// const isLoading = useSelector(selectContactsIsLoading);\n\t// const error = useSelector(selectContactsError);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (!isLoggedIn) return;\n\n\t\tdispatch(getContactsThunk());\n\t}, [isLoggedIn, dispatch]);\n\n\treturn (\n\t\t<main>\n\t\t\t<section className=\"container\">\n\t\t\t\t<h1>Contacts Page</h1>\n\t\t\t\t<ContactAdd />\n\t\t\t\t<ContactsFilter />\n\t\t\t\t<ContactsList />\n\t\t\t</section>\n\t\t</main>\n\t);\n};\n\nexport default ContactsPage;\n"],"names":["ContactAdd","dispatch","useDispatch","errorMessage","useSelector","selectContactsError","contactsList","selectContactsList","_jsxs","onSubmit","e","preventDefault","form","currentTarget","name","elements","userName","value","trim","number","userPhone","find","contact","toLowerCase","alert","concat","addContactThunk","reset","children","_jsx","type","placeholder","minLength","required","ContactsFilter","filter","selectContactsFilter","length","onChange","setFilter","target","ContactsList","error","message","includes","map","_ref","id","onClick","contactId","deleteContactThunk","isLoggedIn","selectUserLoggedIn","useEffect","getContactsThunk","className"],"sourceRoot":""}