{"version":3,"file":"static/js/105.86c021d4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Title/Title.module.css?a947","components/Title/Title.jsx","webpack://react-homework-template/./src/components/contacts/ContactsAdd.module.css?78f1","components/contacts/ContactAdd.jsx","components/contacts/ContactsFilter.jsx","webpack://react-homework-template/./src/components/contacts/ContactsList.module.css?12c2","components/contacts/ContactsList.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main__title\":\"Title_main__title__Fm5pT\"};","import css from './Title.module.css';\n\nexport default function Title() {\n\treturn <h1 className={css.main__title}>Phone Book</h1>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactAdd__btn\":\"ContactsAdd_contactAdd__btn__2F9fr\"};","import { useDispatch, useSelector } from 'react-redux';\nimport {\n\taddContactThunk,\n\teditContactThunk,\n} from 'redux/contacts/contactsOperations';\nimport {\n\teditUserName,\n\teditUserNumber,\n\tselectContactsEditMode,\n\tselectContactsEditedUserData,\n\tselectContactsList,\n\tsetEditModeOff,\n} from 'redux/contacts/contactsSlice';\nimport { Button, TextField } from '@mui/material';\nimport css from './ContactsAdd.module.css';\n\nexport default function ContactAdd() {\n\tconst dispatch = useDispatch();\n\tconst contactsList = useSelector(selectContactsList);\n\tconst editModeOn = useSelector(selectContactsEditMode);\n\tconst editedUserData = useSelector(selectContactsEditedUserData);\n\n\tconst handleSubmitUser = e => {\n\t\te.preventDefault();\n\n\t\tconst form = e.currentTarget;\n\t\tconst name = form.elements.userName.value.trim();\n\t\tconst number = form.elements.userPhone.value.trim();\n\n\t\tif (\n\t\t\tcontactsList.find(\n\t\t\t\tcontact => contact.name.toLowerCase() === name.toLowerCase()\n\t\t\t)\n\t\t) {\n\t\t\talert(\n\t\t\t\t`The contact named ${name} has already been entered into the address book before`\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\teditModeOn\n\t\t\t\t\t? editContactThunk(editedUserData)\n\t\t\t\t\t: addContactThunk({ name, number })\n\t\t\t);\n\t\t\tform.reset();\n\t\t}\n\t};\n\n\tconst handleInput = e => {\n\t\te.target.name === 'userName'\n\t\t\t? dispatch(editUserName(e.target.value))\n\t\t\t: dispatch(editUserNumber(e.target.value));\n\t};\n\n\tif (editModeOn) {\n\t\tdocument.addEventListener('keydown', e => {\n\t\t\tif (e.code === 'Escape') dispatch(setEditModeOff());\n\t\t});\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmitUser}>\n\t\t\t<TextField\n\t\t\t\tvalue={editedUserData.name}\n\t\t\t\tonChange={handleInput}\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"userName\"\n\t\t\t\tlabel=\"Name\"\n\t\t\t\tinputProps={{ minLength: 2 }}\n\t\t\t\tmargin=\"dense\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tfullWidth\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvalue={editedUserData.number}\n\t\t\t\tonChange={handleInput}\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"userPhone\"\n\t\t\t\tlabel=\"Phone number\"\n\t\t\t\tmargin=\"dense\"\n\t\t\t\tfullWidth\n\t\t\t\tsize=\"small\"\n\t\t\t\tinputProps={{ minLength: 5 }}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tclassName={css.contactAdd__btn}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"small\"\n\t\t\t\ttype=\"submit\"\n\t\t\t>\n\t\t\t\t{editModeOn ? 'Update contact' : 'Add new contact'}\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n\tselectContactsFilter,\n\tselectContactsList,\n\tsetFilter,\n} from 'redux/contacts/contactsSlice';\nimport { TextField } from '@mui/material';\n\nexport default function ContactsFilter() {\n\tconst dispatch = useDispatch();\n\tconst contactsList = useSelector(selectContactsList);\n\tconst contactsFilter = useSelector(selectContactsFilter);\n\n\tconst handleFilter = e => {\n\t\tdispatch(setFilter(e.target.value));\n\t};\n\n\treturn contactsList?.length === 0 ? (\n\t\t<p>Contacts list is empty</p>\n\t) : (\n\t\t<div>\n\t\t\t<TextField\n\t\t\t\tonChange={handleFilter}\n\t\t\t\tvalue={contactsFilter}\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"userName\"\n\t\t\t\tlabel=\"Find contacts by name or phone number\"\n\t\t\t\tmargin=\"dense\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tfullWidth\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__list\":\"ContactsList_contacts__list__IN+uy\",\"contacts__item\":\"ContactsList_contacts__item__vJhlS\",\"contacts__btnWrapper\":\"ContactsList_contacts__btnWrapper__ikABL\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contacts/contactsOperations';\nimport {\n\tselectContactsEditMode,\n\tselectContactsError,\n\tselectContactsFilter,\n\tselectContactsIsLoading,\n\tselectContactsList,\n\ttoggleEditMode,\n} from 'redux/contacts/contactsSlice';\nimport {\n\tAlert,\n\tAlertTitle,\n\tBox,\n\tButton,\n\tCircularProgress,\n} from '@mui/material';\nimport css from './ContactsList.module.css';\n\nexport default function ContactsList() {\n\tconst dispatch = useDispatch();\n\tconst contactsList = useSelector(selectContactsList);\n\tconst filter = useSelector(selectContactsFilter);\n\tconst isLoading = useSelector(selectContactsIsLoading);\n\tconst errorMessage = useSelector(selectContactsError);\n\tconst editModeOn = useSelector(selectContactsEditMode);\n\n\tif (errorMessage)\n\t\treturn (\n\t\t\t<p>\n\t\t\t\t<Alert severity=\"error\" className={css.mui__error}>\n\t\t\t\t\t<AlertTitle>Error</AlertTitle>\n\t\t\t\t\tSomething went wrong, try again:\n\t\t\t\t\t<br />\n\t\t\t\t\t<strong>{errorMessage}</strong>\n\t\t\t\t</Alert>\n\t\t\t</p>\n\t\t);\n\n\tconst handleEdit = contactId => {\n\t\tdispatch(toggleEditMode(contactId));\n\t};\n\n\tconst handleDelete = contactId => {\n\t\tdispatch(deleteContactThunk(contactId));\n\t};\n\n\treturn isLoading ? (\n\t\t<Box\n\t\t\tsx={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\theight: '50vh',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignItems: 'center',\n\t\t\t}}\n\t\t>\n\t\t\t<CircularProgress />\n\t\t</Box>\n\t) : (\n\t\t<ul className={css.contacts__list}>\n\t\t\t{contactsList\n\t\t\t\t?.filter(\n\t\t\t\t\tcontact =>\n\t\t\t\t\t\tcontact.name.toLowerCase().includes(filter.toLowerCase().trim()) ||\n\t\t\t\t\t\tcontact.number.includes(filter.trim())\n\t\t\t\t)\n\t\t\t\t.map(({ id, name, number }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={id} className={css.contacts__item}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p>{name}:</p>\n\t\t\t\t\t\t\t\t<p>{number}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={css.contacts__btnWrapper}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => handleEdit(id)}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tdisabled={editModeOn}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(id)}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tcolor=\"error\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t</ul>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__wrapper\":\"ContactsPage_contacts__wrapper__M6l+5\",\"contacts__title\":\"ContactsPage_contacts__title__ywuVy\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUserLoggedIn } from 'redux/auth/authSlice';\nimport { getContactsThunk } from 'redux/contacts/contactsOperations';\nimport ContactAdd from 'components/contacts/ContactAdd';\nimport ContactsFilter from 'components/contacts/ContactsFilter';\nimport ContactsList from 'components/contacts/ContactsList';\nimport Title from 'components/Title';\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n\tconst isLoggedIn = useSelector(selectUserLoggedIn);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (!isLoggedIn) return;\n\n\t\tdispatch(getContactsThunk());\n\t}, [isLoggedIn, dispatch]);\n\n\treturn (\n\t\t<main>\n\t\t\t<Title />\n\t\t\t<section className={`container ${css.contacts__wrapper}`}>\n\t\t\t\t<ContactAdd />\n\t\t\t\t<ContactsFilter />\n\t\t\t\t<ContactsList />\n\t\t\t</section>\n\t\t</main>\n\t);\n};\n\nexport default ContactsPage;\n"],"names":["Title","_jsx","className","css","children","ContactAdd","dispatch","useDispatch","contactsList","useSelector","selectContactsList","editModeOn","selectContactsEditMode","editedUserData","selectContactsEditedUserData","handleInput","e","target","name","editUserName","value","editUserNumber","document","addEventListener","code","setEditModeOff","_jsxs","onSubmit","preventDefault","form","currentTarget","elements","userName","trim","number","userPhone","find","contact","toLowerCase","alert","concat","editContactThunk","addContactThunk","reset","TextField","onChange","type","label","inputProps","minLength","margin","size","fullWidth","required","Button","variant","ContactsFilter","contactsFilter","selectContactsFilter","length","setFilter","ContactsList","filter","isLoading","selectContactsIsLoading","errorMessage","selectContactsError","Alert","severity","AlertTitle","Box","sx","display","height","justifyContent","alignItems","CircularProgress","includes","map","_ref","id","onClick","contactId","toggleEditMode","disabled","deleteContactThunk","color","isLoggedIn","selectUserLoggedIn","useEffect","getContactsThunk"],"sourceRoot":""}